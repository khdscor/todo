<?xml version="1.0" encoding="UTF-8"?>
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">

  <!-- 설정: 로깅 파일 위치 -->
  <property name="LOG_LOOT" value="./logs"/>
  <!-- 설정: 로깅 파일명 -->
  <property name="LOG_FILE_NAME" value="testLog"/>

  <!-- pattern -->
  <property name="LOG_PATTERN"
    value="%-5level %d{yy-MM-dd HH:mm:ss}[%thread] [%logger{0}:%line] - %msg%n"/>

  <!-- Console Appender -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>${LOG_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- File Appender -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 파일경로 설정 -->
    <file>${LOG_LOOT}/${LOG_FILE_NAME}.log</file>
    <!-- Rolling 정책 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
      <fileNamePattern>${LOG_LOOT}/${LOG_FILE_NAME}.%d{yyyy-MM-dd_HH:mm}.log</fileNamePattern>
      <totalSizeCap>3GB</totalSizeCap>
      <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <!-- 출력패턴 설정-->
    <encoder>
      <pattern>${LOG_PATTERN}</pattern>
    </encoder>
  </appender>

  <!--Environment 내의 프로퍼티들을 개별적으로 설정할 수도 있다.-->
  <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root"/>

  <SpringProfile name="local">
    <root level="debug">
      <appender-ref ref="CONSOLE"/>
    </root>
  </SpringProfile>
  <SpringProfile name="dev | prod | staging">
    <root level="info">
      <appender-ref ref="CONSOLE"/>
      <appender-ref ref="FILE"/>
    </root>
  </SpringProfile>

</configuration>